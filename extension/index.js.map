{"mappings":"gCAAMA,eA8DN,SAASC,EAAYC,EAAQC,EAAQC,GAGpC,GAFAF,EAAOG,IAAIC,KAAK,0BAA2BF,GAEvCA,EAAS,CACZ,IAAIG,EAAgBH,EACfG,EAAcC,WAAW,OAC7BD,EAAgB,IAAMA,GAGvBL,EAAOG,IAAIC,KAAK,oBAAqBF,GAErCD,EACEM,KAAKF,GACLG,MAAK,IAzET,SAAgBR,EAAQC,GACvBD,EAAOG,IAAIC,KAAK,iBAEhB,MAAMK,EAAgBT,EAAOU,UAAU,iBAoCvC,SAASC,EAAgBC,GACxBX,EAAOY,IAAIJ,EAAcK,MAAOF,GAnCjCZ,EAAOG,IAAIC,KAAK,gCAAgCK,EAAcK,UAE9Db,EAAOc,WAAU,CAACC,EAAMC,EAAMC,EAASC,KACtC,MACMC,EADSD,EAAKE,cACQC,KAAIC,GACb,UAAdA,EAAKC,KACD,IACHD,EACHE,YAAaF,EAAKE,YAAYC,OAAO,CACpCC,kBAAmB,UACnBC,eAAgB,OAChBC,KAAM,SAKF,IACHN,KAIDP,EAAKc,gBAAkBrB,EAAcK,MAAMgB,eAC9C9B,EAAO+B,YACN,eACA,MAACd,UAAMC,EAASc,OAAQZ,IACxBa,IACKA,GACHC,QAAQC,MAAMF,SAWnBjC,EAAOoC,UAAU,kBAAmBzB,GAEpCX,EAAOoC,UAAU,oBAAoB,KACZpC,EAAOU,UAAU,mBACrBI,QACnBd,EAAOG,IAAIC,KAAK,wBACQJ,EAAOU,UAAU,mBACzBI,OAAQ,EACxBd,EAAOqC,SAAS,kBAAmB1B,GACnCV,EAAOqC,KAAK7B,EAAcK,WAIJd,EAAOU,UAAU,mBACzBI,OAAQ,EAgBVyB,CAAOvC,EAAQC,KAC1BuC,OAAMC,IACNzC,EAAOG,IAAIgC,MAAM,+BAA+BM,MACxBzC,EAAOU,UAAU,mBACzBI,OAAQ,MA+B5B4B,OAAAC,QAAiB,SAAU3C,GAC1BA,EAAOU,UAAU,gBAAiB,CACjCkC,aAAc,KAEf5C,EAAOU,UAAU,kBAAmB,CACnCkC,cAAc,IAEf5C,EAAOG,IAAIC,KAAK,8BAEhB,MAAMyC,EAAaC,EAAe9C,EAAQ,eAE1C6C,EAAWE,aAAYC,MAAMC,KArC9B,SAAyBjD,EAAQC,GAChCD,EAAOG,IAAIC,KAAK,mCAChB,MAAMK,EAAgBT,EAAOU,UAAU,iBAEnCD,EAAcK,QACdd,EAAOG,IAAIC,KAAK,wCAAyCK,EAAcK,OAC1Ef,EAAYC,EAAQC,EAAQQ,EAAcK,QAG3Cd,EAAOoC,UAAU,iBAAiB,MACTpC,EAAOU,UAAU,mBACpBI,OAASL,EAAcK,QAC3Cd,EAAOG,IAAIC,KAAK,sCAAuCK,EAAcK,OACrEf,EAAYC,EAAQC,EAAQQ,EAAcK,WAG5Cd,EAAOG,IAAIC,KAAK,wCAsBf8C,CAAgBlD,EAAQiD,MAGzBJ,EAAWM,eAAcH,SAtB1B,SAA4BhD,GAC3BA,EAAOG,IAAIC,KAAK,qCACQJ,EAAOU,UAAU,mBACzBI,OAAQ,EACxBd,EAAOG,IAAIC,KAAK,0CAkBqBgD,CAAmBpD","sources":["src/extension/index.js"],"sourcesContent":["const {requireService} = require('nodecg-io-core');\n\nfunction onJoin(nodecg, client) {\n\tnodecg.log.info('ok setting up');\n\n\tconst twitchChannel = nodecg.Replicant('twitchChannel');\n\n\tnodecg.log.info(`Connected to twitch channel \"${twitchChannel.value}\"`);\n\n\tclient.onMessage((chan, user, message, _msg) => {\n\t\tconst emotes = _msg.parseEmotes();\n\t\tconst parsedEmotes = emotes.map(curr => {\n\t\t\tif (curr.type === 'emote') {\n\t\t\t\treturn {\n\t\t\t\t\t...curr,\n\t\t\t\t\tdisplayInfo: curr.displayInfo.getUrl({\n\t\t\t\t\t\tanimationSettings: 'default',\n\t\t\t\t\t\tbackgroundType: 'dark',\n\t\t\t\t\t\tsize: '1.0'\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...curr\n\t\t\t};\n\t\t});\n\n\t\tif (chan.toLowerCase() === twitchChannel.value.toLowerCase()) {\n\t\t\tnodecg.sendMessage(\n\t\t\t\t'ChatReceived',\n\t\t\t\t{user, message, msgobj: parsedEmotes},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tfunction sendChatMessage(msg) {\n\t\tclient.say(twitchChannel.value, msg);\n\t}\n\n\tnodecg.listenFor('SendChatMessage', sendChatMessage);\n\n\tnodecg.listenFor('DisconnectTwitch', () => {\n\t\tconst twitchConnected = nodecg.Replicant('twitchConnected');\n\t\tif (twitchConnected.value) {\n\t\t\tnodecg.log.info('Disconnecting twitch');\n\t\t\tconst twitchConnected = nodecg.Replicant('twitchConnected');\n\t\t\ttwitchConnected.value = false;\n\t\t\tnodecg.unlisten('SendChatMessage', sendChatMessage);\n\t\t\tclient.part(twitchChannel.value);\n\t\t}\n\t});\n\n\tconst twitchConnected = nodecg.Replicant('twitchConnected');\n\ttwitchConnected.value = true;\n}\n\nfunction joinChannel(nodecg, client, channel) {\n\tnodecg.log.info('actually doing join to ', channel);\n\n\tif (channel) {\n\t\tlet channelToJoin = channel;\n\t\tif (!channelToJoin.startsWith('#')) {\n\t\t\tchannelToJoin = '#' + channelToJoin;\n\t\t}\n\n\t\tnodecg.log.info('doing it for real', channel);\n\n\t\tclient\n\t\t\t.join(channelToJoin)\n\t\t\t.then(() => onJoin(nodecg, client))\n\t\t\t.catch(reason => {\n\t\t\t\tnodecg.log.error(`Couldn't connect to twitch: ${reason}.`);\n\t\t\t\tconst twitchConnected = nodecg.Replicant('twitchConnected');\n\t\t\t\ttwitchConnected.value = false;\n\t\t\t});\n\t}\n}\n\nfunction setupTwitchChat(nodecg, client) {\n\tnodecg.log.info('Setting up Twitch Chat service.');\n\tconst twitchChannel = nodecg.Replicant('twitchChannel');\n\n\tif (twitchChannel.value) {\n\t    nodecg.log.info('Read existing channel, starting wtih ', twitchChannel.value);\n\t\tjoinChannel(nodecg, client, twitchChannel.value);\n\t}\n\n\tnodecg.listenFor('ConnectTwitch', () => {\n\t\tconst twitchConnected = nodecg.Replicant('twitchConnected');\n\t\tif (!twitchConnected.value && twitchChannel.value) {\n\t\t\tnodecg.log.info('got connect channel, connecting to ', twitchChannel.value);\n\t\t\tjoinChannel(nodecg, client, twitchChannel.value);\n\t\t}\n\t});\n\tnodecg.log.info('Done setting up Twitch Chat service.');\n}\n\nfunction teardownTwitchChat(nodecg) {\n\tnodecg.log.info('Tearing down Twitch Chat service.');\n\tconst twitchConnected = nodecg.Replicant('twitchConnected');\n\ttwitchConnected.value = false;\n\tnodecg.log.info('Done tearing down Twitch Chat service.');\n}\n\nmodule.exports = function (nodecg) {\n\tnodecg.Replicant('twitchChannel', {\n\t\tdefaultValue: ''\n\t});\n\tnodecg.Replicant('twitchConnected', {\n\t\tdefaultValue: false\n\t});\n\tnodecg.log.info('Twitch extension starting.');\n\n\tconst twitchChat = requireService(nodecg, 'twitch-chat');\n\n\ttwitchChat.onAvailable(async tcClient => {\n\t\tsetupTwitchChat(nodecg, tcClient);\n\t});\n\n\ttwitchChat.onUnavailable(async () => teardownTwitchChat(nodecg));\n};\n"],"names":["requireService","$57621f5187ddf231$var$joinChannel","nodecg","client","channel","log","info","channelToJoin","startsWith","join","then","twitchChannel","Replicant","sendChatMessage","msg","say","value","onMessage","chan","user","message","_msg","parsedEmotes","parseEmotes","map","curr","type","displayInfo","getUrl","animationSettings","backgroundType","size","toLowerCase","sendMessage","msgobj","err","console","error","listenFor","unlisten","part","$57621f5187ddf231$var$onJoin","catch","reason","module","exports","defaultValue","twitchChat","$57621f5187ddf231$require$requireService","onAvailable","async","tcClient","$57621f5187ddf231$var$setupTwitchChat","onUnavailable","$57621f5187ddf231$var$teardownTwitchChat"],"version":3,"file":"index.js.map","sourceRoot":"../"}