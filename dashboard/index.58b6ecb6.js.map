{"mappings":"AAAA,MAAMA,gBAAkBC,OAAOC,UAAU,mBAEzC,SAASC,gBAAgBC,GACpBA,GACHC,SAASC,eAAe,iBAAiBC,UAAY,YACrDF,SAASC,eAAe,qBAAqBE,aAAa,WAAY,SACtEH,SAASC,eAAe,kBAAkBE,aAAa,WAAY,QACnEH,SAASC,eAAe,gBAAgBE,aAAa,WAAY,QACjEH,SAASC,eAAe,gBAAgBE,aAAa,WAAY,UAEjEH,SAASC,eAAe,iBAAiBC,UAAY,eACrDF,SAASC,eAAe,kBAAkBE,aAAa,WAAY,SACnEH,SAASC,eAAe,qBAAqBE,aAAa,WAAY,QACtEH,SAASC,eAAe,gBAAgBE,aAAa,WAAY,SACjEH,SAASC,eAAe,gBAAgBE,aAAa,WAAY,UAInEC,OAAOC,kBAAkBV,iBAAiBW,MAAK,KAC9CR,iBAA0C,IAA1BH,gBAAgBY,UAGjC,MAAMC,mBAAqBZ,OAAOC,UAAU,wBAC5CO,OAAOC,kBAAkBG,oBAAoBF,MAAK,MAEhB,IAA7BE,mBAAmBD,MACtBP,SAASC,eAAe,qBAAqBQ,SAAU,EAEvDT,SAASC,eAAe,oBAAoBQ,SAAU,EAIvDD,mBAAmBE,GAAG,UAAUC,KACf,IAAZA,EACHX,SAASC,eAAe,qBAAqBQ,SAAU,EAEvDT,SAASC,eAAe,oBAAoBQ,SAAU,KAKzCT,SAASY,iBAAiB,2CAClCC,SAAQC,GACdA,EAAMC,iBAAiB,UAAUC,IAChCR,mBAAmBD,MAA+B,QAAvBS,EAAMC,OAAOV","sources":["src/dashboard/index.js"],"sourcesContent":["const twitchConnected = nodecg.Replicant('twitchConnected');\n\nfunction setTwitchStatus(isConnected) {\n\tif (isConnected) {\n\t\tdocument.getElementById('twitch-status').innerText = 'Connected';\n\t\tdocument.getElementById('submit-disconnect').setAttribute('disabled', 'false');\n\t\tdocument.getElementById('submit-connect').setAttribute('disabled', 'true');\n\t\tdocument.getElementById('channel-name').setAttribute('readonly', 'true');\n\t\tdocument.getElementById('channel-name').setAttribute('disabled', 'true');\n\t} else {\n\t\tdocument.getElementById('twitch-status').innerText = 'Disconnected';\n\t\tdocument.getElementById('submit-connect').setAttribute('disabled', 'false');\n\t\tdocument.getElementById('submit-disconnect').setAttribute('disabled', 'true');\n\t\tdocument.getElementById('channel-name').setAttribute('readonly', 'false');\n\t\tdocument.getElementById('channel-name').setAttribute('disabled', 'false');\n\t}\n}\n\nNodeCG.waitForReplicants(twitchConnected).then(() => {\n\tsetTwitchStatus(twitchConnected.value === true);\n});\n\nconst audioAlertsEnabled = nodecg.Replicant('audio_alerts_enabled');\nNodeCG.waitForReplicants(audioAlertsEnabled).then(() => {\n\t// Update the selected value\n\tif (audioAlertsEnabled.value === true) {\n\t\tdocument.getElementById('audio-enabled-yes').checked = true;\n\t} else {\n\t\tdocument.getElementById('audio-enabled-no').checked = true;\n\t}\n\n\t// Bind a replicant change handler\n\taudioAlertsEnabled.on('change', nextVal => {\n\t\tif (nextVal === true) {\n\t\t\tdocument.getElementById('audio-enabled-yes').checked = true;\n\t\t} else {\n\t\t\tdocument.getElementById('audio-enabled-no').checked = true;\n\t\t}\n\t});\n\n\t// Bind a change handler for the dropdown\n\tconst radios = document.querySelectorAll('input[type=radio][name=\\'audio-enabled\\']');\n\tradios.forEach(radio =>\n\t\tradio.addEventListener('change', event => {\n\t\t\taudioAlertsEnabled.value = event.target.value === 'Yes';\n\t\t})\n\t);\n});\n"],"names":["twitchConnected","nodecg","Replicant","setTwitchStatus","isConnected","document","getElementById","innerText","setAttribute","NodeCG","waitForReplicants","then","value","audioAlertsEnabled","checked","on","nextVal","querySelectorAll","forEach","radio","addEventListener","event","target"],"version":3,"file":"index.58b6ecb6.js.map"}